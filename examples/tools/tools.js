/*
 * prerequisite : npm install optparse
 *
 * Misc. tools for tests 
 * 
 */

exports.mergeObjects = function(obj1,obj2){
    var obj3 = {};
    for (var attrname in obj1) { obj3[attrname] = obj1[attrname]; }
    for (var attrname in obj2) { obj3[attrname] = obj2[attrname]; }
    return obj3;
};

exports.readSlavesList = function(fileName, suffix) {
	var fs = require('fs');
	// read the clientsList.txt file (generated by runEc2instances)
	var slave_hosts = [];
	fs.readFileSync(fileName).toString().split('\n').forEach(function(line) {
		// populate an array of strings of the form : ['host1:port','host2:port',...]
		if (line.length > 2)
			slave_hosts.push(line+suffix);
	});
	return slave_hosts;
};


exports.readCmdOptions = function() {
	// Import the optparse script
	var optparse = require('optparse');

	// Define some options
	var SWITCHES = [
		['-h', '--host HOSTNAME', "The host ip or name to stress-test."],
		['-p', '--port PORT',     "The host's TCP port to connect to"],
		['-s', '--slaves-list SLAVES_FILE', "Optional list of nodeload slaves to use : 1 hostname per row (for example generated by a proper ec2-describe-instances command output)"],
		['-c', '--comment COMMENT', "Optional comment to be included within the html report"],
		['-H', '--help', "Shows this help section"],
	];

	// Create a new OptionParser with defined switches
	var parser = new optparse.OptionParser(SWITCHES);
	
	parser.banner = 'Usage: '+process.argv[1]+' [options]';

	// Internal variable to store options.
	var options = {
	    slaves: '../clientsList.txt',
	    host: undefined
	};

	// Handle the --host switch
	parser.on('host', function(name, value) {
	    options.host = value;
	});

	// Handle the --port switch
	parser.on('port', function(name, value) {
	    options.port = value*1;
	});

	// Handle the --slaves-list switch
	parser.on('slaves-list', function(name, value) {
	    options.slaves = value;
	});
	// Handle the --comment switch
	parser.on('comment', function(name, value) {
	    options.comment = value;
	});

	// Handle the --help switch
	parser.on('help', function() {
	    console.log(parser.toString());
	});

	// Parse command line arguments
	parser.parse(process.argv);

	if (!options.port) {
		options.port = 80;
	}
	if (!options.host) {
		options.host = 'localhost';
		console.log("no --host HOSTNAME argument, let's run our own embeded server for simple tests.");
		var http = require('http');
		options.port=9000;
		
		// Start a local HTTP server that we can load test :
		// we randomly answer 404 errors to 1% of queries
		var svr = http.createServer(function (req, res) {
			var r = Math.random();
	        var rstatus = (r < 0.99) ? 200 : 404;
            res.writeHead(rstatus, {'Content-Type': 'text/plain'});
            res.end(req.url);
		});
		svr.listen(options.port);
		console.log('Started test server on port '+options.port);
	}
	return options;
};
